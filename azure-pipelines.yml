trigger:
  - main
  - staging

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

stages:
- stage: StageA
  displayName: "Stage A"
  jobs:
    - job: output_message_job_a
      displayName: "Output Message Job"
      pool:
          vmImage: "ubuntu-latest"
      steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              # npm test
            displayName: 'npm install and test'
- stage: StageB
  condition: and(succeeded(), eq(variables.isMain, 'false'))
  displayName: "Stage B"
  dependsOn: StageA
  jobs:
    - job: output_message_job_b
      displayName: "Output Message Job"
      variables:
        - group: dev-variables  
      pool:
          vmImage: "ubuntu-latest"
      steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build
              npm run export
            displayName: 'npm install and build and export'
          - task: CopyFiles@2
            displayName: 'Copy Files'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'out/**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: ArchiveFiles@2
            displayName: 'Archive $(Build.ArtifactStagingDirectory)'
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: wvc-our-work-staging'
            inputs:
              ArtifactName: 'wvc-our-work-staging'
- stage: StageC
  condition: and(succeeded(), eq(variables.isMain, 'true'))
  displayName: "Stage C"
  dependsOn: StageA
  jobs:
    - job: output_message_job_c
      displayName: "Output Message Job"
      variables:
        - group: prod-variables  
      pool:
          vmImage: "ubuntu-latest"
      steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build
              npm run export
            displayName: 'npm install and build and export'
          - task: CopyFiles@2
            displayName: 'Copy Files'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'out/**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: ArchiveFiles@2
            displayName: 'Archive $(Build.ArtifactStagingDirectory)'
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: wvc-our-work-prod'
            inputs:
              ArtifactName: 'wvc-our-work-prod'